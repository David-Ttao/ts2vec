Arguments: Namespace(batch_size=8, dataset='ETTh1', epochs=250, eval=False, gpu=5, irregular=0, iters=None, loader='forecast_csv', lr=0.0003, max_threads=None, max_train_length=3000, muti_dataset='exchange_rate', repr_dims=320, run_name='forecast_multivar', save_every=None, seed=None)
training/exchange_rate_epochs_250
Loading data... Traceback (most recent call last):
  File "train.py", line 72, in <module>
    data,train_slice, valid_slice, test_slice, scaler, pred_lens, n_covariate_cols=datautils.load_muti_forecast_csv(args,dset)
  File "/home/yupengz/ts2vec/datautils.py", line 187, in load_muti_forecast_csv
    data = pd.read_csv(f'datasets/{name}.csv', index_col='date', parse_dates=True)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/pandas/io/parsers.py", line 688, in read_csv
    return _read(filepath_or_buffer, kwds)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/pandas/io/parsers.py", line 454, in _read
    parser = TextFileReader(fp_or_buf, **kwds)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/pandas/io/parsers.py", line 948, in __init__
    self._make_engine(self.engine)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/pandas/io/parsers.py", line 1180, in _make_engine
    self._engine = CParserWrapper(self.f, **self.options)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/pandas/io/parsers.py", line 2010, in __init__
    self._reader = parsers.TextReader(src, **kwds)
  File "pandas/_libs/parsers.pyx", line 382, in pandas._libs.parsers.TextReader.__cinit__
  File "pandas/_libs/parsers.pyx", line 674, in pandas._libs.parsers.TextReader._setup_parser_source
FileNotFoundError: [Errno 2] No such file or directory: 'datasets/exchange.csv'
n2one setting exchange_rate -> ETTh1
Dataset: ETTh1
Arguments: Namespace(batch_size=8, dataset='ETTh1', epochs=None, eval=False, gpu=0, irregular=0, iters=None, loader='forecast_csv', lr=0.001, max_threads=None, max_train_length=3000, model_path='./training/exchange_rate_epochs_250/model.pkl', muti_dataset='exchange_rate', record=1, repr_dims=320, run_name='forecast_multivar', save_every=None, seed=None, target='ETTh1')
Loading data... /home/yupengz/ts2vec/datautils.py:136: FutureWarning: weekofyear and week have been deprecated, please use DatetimeIndex.isocalendar().week instead, which returns a Series.  To exactly reproduce the behavior of week and weekofyear and return an Index, you may call pd.Int64Index(idx.isocalendar().week)
  dt.weekofyear.to_numpy(),
Traceback (most recent call last):
  File "finetune.py", line 81, in <module>
    model.load(args.model_path)
  File "/home/yupengz/ts2vec/ts2vec.py", line 328, in load
    state_dict = torch.load(fn, map_location=self.device)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 699, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 231, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 212, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './training/exchange_rate_epochs_250/model.pkl'
n2one setting exchange_rate -> ETTh2
Dataset: ETTh1
Arguments: Namespace(batch_size=8, dataset='ETTh1', epochs=None, eval=False, gpu=0, irregular=0, iters=None, loader='forecast_csv', lr=0.001, max_threads=None, max_train_length=3000, model_path='./training/exchange_rate_epochs_250/model.pkl', muti_dataset='exchange_rate', record=1, repr_dims=320, run_name='forecast_multivar', save_every=None, seed=None, target='ETTh2')
Loading data... /home/yupengz/ts2vec/datautils.py:136: FutureWarning: weekofyear and week have been deprecated, please use DatetimeIndex.isocalendar().week instead, which returns a Series.  To exactly reproduce the behavior of week and weekofyear and return an Index, you may call pd.Int64Index(idx.isocalendar().week)
  dt.weekofyear.to_numpy(),
Traceback (most recent call last):
  File "finetune.py", line 81, in <module>
    model.load(args.model_path)
  File "/home/yupengz/ts2vec/ts2vec.py", line 328, in load
    state_dict = torch.load(fn, map_location=self.device)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 699, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 231, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 212, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './training/exchange_rate_epochs_250/model.pkl'
n2one setting exchange_rate -> ETTm1
Dataset: ETTh1
Arguments: Namespace(batch_size=8, dataset='ETTh1', epochs=None, eval=False, gpu=0, irregular=0, iters=None, loader='forecast_csv', lr=0.001, max_threads=None, max_train_length=3000, model_path='./training/exchange_rate_epochs_250/model.pkl', muti_dataset='exchange_rate', record=1, repr_dims=320, run_name='forecast_multivar', save_every=None, seed=None, target='ETTm1')
Loading data... /home/yupengz/ts2vec/datautils.py:136: FutureWarning: weekofyear and week have been deprecated, please use DatetimeIndex.isocalendar().week instead, which returns a Series.  To exactly reproduce the behavior of week and weekofyear and return an Index, you may call pd.Int64Index(idx.isocalendar().week)
  dt.weekofyear.to_numpy(),
Traceback (most recent call last):
  File "finetune.py", line 81, in <module>
    model.load(args.model_path)
  File "/home/yupengz/ts2vec/ts2vec.py", line 328, in load
    state_dict = torch.load(fn, map_location=self.device)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 699, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 231, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 212, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './training/exchange_rate_epochs_250/model.pkl'
n2one setting exchange_rate -> ETTm2
Dataset: ETTh1
Arguments: Namespace(batch_size=8, dataset='ETTh1', epochs=None, eval=False, gpu=0, irregular=0, iters=None, loader='forecast_csv', lr=0.001, max_threads=None, max_train_length=3000, model_path='./training/exchange_rate_epochs_250/model.pkl', muti_dataset='exchange_rate', record=1, repr_dims=320, run_name='forecast_multivar', save_every=None, seed=None, target='ETTm2')
Loading data... /home/yupengz/ts2vec/datautils.py:136: FutureWarning: weekofyear and week have been deprecated, please use DatetimeIndex.isocalendar().week instead, which returns a Series.  To exactly reproduce the behavior of week and weekofyear and return an Index, you may call pd.Int64Index(idx.isocalendar().week)
  dt.weekofyear.to_numpy(),
Traceback (most recent call last):
  File "finetune.py", line 81, in <module>
    model.load(args.model_path)
  File "/home/yupengz/ts2vec/ts2vec.py", line 328, in load
    state_dict = torch.load(fn, map_location=self.device)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 699, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 231, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 212, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './training/exchange_rate_epochs_250/model.pkl'
n2one setting exchange_rate -> electricity
Dataset: ETTh1
Arguments: Namespace(batch_size=8, dataset='ETTh1', epochs=None, eval=False, gpu=0, irregular=0, iters=None, loader='forecast_csv', lr=0.001, max_threads=None, max_train_length=3000, model_path='./training/exchange_rate_epochs_250/model.pkl', muti_dataset='exchange_rate', record=1, repr_dims=320, run_name='forecast_multivar', save_every=None, seed=None, target='electricity')
Loading data... /home/yupengz/ts2vec/datautils.py:136: FutureWarning: weekofyear and week have been deprecated, please use DatetimeIndex.isocalendar().week instead, which returns a Series.  To exactly reproduce the behavior of week and weekofyear and return an Index, you may call pd.Int64Index(idx.isocalendar().week)
  dt.weekofyear.to_numpy(),
Traceback (most recent call last):
  File "finetune.py", line 81, in <module>
    model.load(args.model_path)
  File "/home/yupengz/ts2vec/ts2vec.py", line 328, in load
    state_dict = torch.load(fn, map_location=self.device)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 699, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 231, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 212, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './training/exchange_rate_epochs_250/model.pkl'
n2one setting exchange_rate -> traffic
Dataset: ETTh1
Arguments: Namespace(batch_size=8, dataset='ETTh1', epochs=None, eval=False, gpu=0, irregular=0, iters=None, loader='forecast_csv', lr=0.001, max_threads=None, max_train_length=3000, model_path='./training/exchange_rate_epochs_250/model.pkl', muti_dataset='exchange_rate', record=1, repr_dims=320, run_name='forecast_multivar', save_every=None, seed=None, target='traffic')
Loading data... /home/yupengz/ts2vec/datautils.py:136: FutureWarning: weekofyear and week have been deprecated, please use DatetimeIndex.isocalendar().week instead, which returns a Series.  To exactly reproduce the behavior of week and weekofyear and return an Index, you may call pd.Int64Index(idx.isocalendar().week)
  dt.weekofyear.to_numpy(),
Traceback (most recent call last):
  File "finetune.py", line 81, in <module>
    model.load(args.model_path)
  File "/home/yupengz/ts2vec/ts2vec.py", line 328, in load
    state_dict = torch.load(fn, map_location=self.device)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 699, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 231, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 212, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './training/exchange_rate_epochs_250/model.pkl'
n2one setting exchange_rate -> exchange_rate
Dataset: ETTh1
Arguments: Namespace(batch_size=8, dataset='ETTh1', epochs=None, eval=False, gpu=0, irregular=0, iters=None, loader='forecast_csv', lr=0.001, max_threads=None, max_train_length=3000, model_path='./training/exchange_rate_epochs_250/model.pkl', muti_dataset='exchange_rate', record=1, repr_dims=320, run_name='forecast_multivar', save_every=None, seed=None, target='exchange_rate')
Loading data... /home/yupengz/ts2vec/datautils.py:136: FutureWarning: weekofyear and week have been deprecated, please use DatetimeIndex.isocalendar().week instead, which returns a Series.  To exactly reproduce the behavior of week and weekofyear and return an Index, you may call pd.Int64Index(idx.isocalendar().week)
  dt.weekofyear.to_numpy(),
Traceback (most recent call last):
  File "finetune.py", line 81, in <module>
    model.load(args.model_path)
  File "/home/yupengz/ts2vec/ts2vec.py", line 328, in load
    state_dict = torch.load(fn, map_location=self.device)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 699, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 231, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 212, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './training/exchange_rate_epochs_250/model.pkl'
n2one setting exchange_rate -> weather
Dataset: ETTh1
Arguments: Namespace(batch_size=8, dataset='ETTh1', epochs=None, eval=False, gpu=0, irregular=0, iters=None, loader='forecast_csv', lr=0.001, max_threads=None, max_train_length=3000, model_path='./training/exchange_rate_epochs_250/model.pkl', muti_dataset='exchange_rate', record=1, repr_dims=320, run_name='forecast_multivar', save_every=None, seed=None, target='weather')
Loading data... /home/yupengz/ts2vec/datautils.py:136: FutureWarning: weekofyear and week have been deprecated, please use DatetimeIndex.isocalendar().week instead, which returns a Series.  To exactly reproduce the behavior of week and weekofyear and return an Index, you may call pd.Int64Index(idx.isocalendar().week)
  dt.weekofyear.to_numpy(),
Traceback (most recent call last):
  File "finetune.py", line 81, in <module>
    model.load(args.model_path)
  File "/home/yupengz/ts2vec/ts2vec.py", line 328, in load
    state_dict = torch.load(fn, map_location=self.device)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 699, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 231, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/torch/serialization.py", line 212, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './training/exchange_rate_epochs_250/model.pkl'
Arguments: Namespace(batch_size=8, dataset='ETTh1', epochs=250, eval=False, gpu=5, irregular=0, iters=None, loader='forecast_csv', lr=0.0003, max_threads=None, max_train_length=3000, muti_dataset='exchange', repr_dims=320, run_name='forecast_multivar', save_every=None, seed=None)
training/exchange_epochs_250
Loading data... /home/yupengz/ts2vec/datautils.py:136: FutureWarning: weekofyear and week have been deprecated, please use DatetimeIndex.isocalendar().week instead, which returns a Series.  To exactly reproduce the behavior of week and weekofyear and return an Index, you may call pd.Int64Index(idx.isocalendar().week)
  dt.weekofyear.to_numpy(),
done
Epoch #0: loss=5.253926187753677
Epoch #1: loss=2.686298429965973
Epoch #2: loss=2.1985671669244766
Epoch #3: loss=1.7755275815725327
Epoch #4: loss=1.7711567878723145
Epoch #5: loss=1.7042267620563507
Epoch #6: loss=1.6652703136205673
Epoch #7: loss=1.5677556544542313
Epoch #8: loss=1.6520884782075882
Epoch #9: loss=1.551517367362976
Epoch #10: loss=1.436055526137352
Epoch #11: loss=1.4475052207708359
Epoch #12: loss=1.4645807594060898
Epoch #13: loss=1.4733599126338959
Epoch #14: loss=1.413322314620018
Epoch #15: loss=1.3824873715639114
Epoch #16: loss=1.3097510933876038
Epoch #17: loss=1.3169892877340317
Epoch #18: loss=1.3348300009965897
Epoch #19: loss=1.2592170536518097
Epoch #20: loss=1.2639913260936737
Epoch #21: loss=1.1999849751591682
Epoch #22: loss=1.1694954186677933
Epoch #23: loss=1.2410876154899597
Epoch #24: loss=1.1279233768582344
Epoch #25: loss=1.2028099671006203
Epoch #26: loss=1.1251511424779892
Epoch #27: loss=1.1190708428621292
Epoch #28: loss=1.0485827028751373
Epoch #29: loss=1.0880981087684631
Epoch #30: loss=0.9750353917479515
Epoch #31: loss=1.0479866415262222
Epoch #32: loss=0.9192167595028877
Epoch #33: loss=0.9881825819611549
Epoch #34: loss=0.9926561415195465
Epoch #35: loss=0.9106144607067108
Epoch #36: loss=0.8571819961071014
Epoch #37: loss=0.857321709394455
Epoch #38: loss=0.9224264621734619
Epoch #39: loss=0.8521893545985222
Epoch #40: loss=0.8323383927345276
Epoch #41: loss=0.8261235728859901
Epoch #42: loss=0.669593021273613
Epoch #43: loss=0.7380568608641624
Epoch #44: loss=0.8348463624715805
Epoch #45: loss=0.7912387177348137
Epoch #46: loss=0.7663630396127701
Epoch #47: loss=0.7598549723625183
Epoch #48: loss=0.8322115018963814
Epoch #49: loss=0.7917783483862877
Epoch #50: loss=0.694549348205328
Epoch #51: loss=0.6428446471691132
Epoch #52: loss=0.6137605980038643
Epoch #53: loss=0.7321438752114773
Epoch #54: loss=0.6598943807184696
Epoch #55: loss=0.5697053782641888
Epoch #56: loss=0.49141764268279076
Epoch #57: loss=0.62311876937747
Epoch #58: loss=0.5837878547608852
Epoch #59: loss=0.6295797936618328
Epoch #60: loss=0.7005942203104496
Epoch #61: loss=0.5262285135686398
Epoch #62: loss=0.4336596950888634
Epoch #63: loss=0.48459798842668533
Epoch #64: loss=0.7088363897055387
Epoch #65: loss=0.5658487901091576
Epoch #66: loss=0.39908528700470924
Epoch #67: loss=0.7173271365463734
Epoch #68: loss=0.42960589565336704
Epoch #69: loss=0.42078086733818054
Epoch #70: loss=0.4595951270312071
Epoch #71: loss=0.6199373193085194
Epoch #72: loss=0.5559155307710171
Epoch #73: loss=0.39017097279429436
Epoch #74: loss=0.5972965694963932
Epoch #75: loss=0.47770044952630997
Epoch #76: loss=0.5141304954886436
Epoch #77: loss=0.4561293460428715
Epoch #78: loss=0.47760203666985035
Epoch #79: loss=0.40041627176105976
Epoch #80: loss=0.45279038697481155
Epoch #81: loss=0.32461875677108765
Epoch #82: loss=0.43864930607378483
Epoch #83: loss=0.46143244579434395
Epoch #84: loss=0.4167444370687008
Epoch #85: loss=0.4895862601697445
Epoch #86: loss=0.3254213463515043
Epoch #87: loss=0.3621598966419697
Epoch #88: loss=0.3794296756386757
Epoch #89: loss=0.3137113442644477
Epoch #90: loss=0.32286414690315723
Epoch #91: loss=0.42069490626454353
Epoch #92: loss=0.28277762047946453
Epoch #93: loss=0.46246406994760036
Epoch #94: loss=0.3775229826569557
Epoch #95: loss=0.31374130584299564
Epoch #96: loss=0.350106343626976
Epoch #97: loss=0.3674403503537178
Epoch #98: loss=0.3775277491658926
Epoch #99: loss=0.5237865597009659
Epoch #100: loss=0.31327134743332863
Epoch #101: loss=0.4271023813635111
Epoch #102: loss=0.3708960823714733
Epoch #103: loss=0.39842602238059044
Epoch #104: loss=0.3138604946434498
Epoch #105: loss=0.3258992750197649
Epoch #106: loss=0.3290681503713131
Epoch #107: loss=0.3079779092222452
Epoch #108: loss=0.5115028526633978
Epoch #109: loss=0.3494735583662987
Epoch #110: loss=0.37098205648362637
Epoch #111: loss=0.467105969786644
Epoch #112: loss=0.28597538731992245
Epoch #113: loss=0.29920899495482445
Epoch #114: loss=0.3625916261225939
Epoch #115: loss=0.3729599490761757
Epoch #116: loss=0.32303922437131405
Epoch #117: loss=0.3368267137557268
Epoch #118: loss=0.2926669027656317
Epoch #119: loss=0.2805132307112217
Epoch #120: loss=0.3956248573958874
Epoch #121: loss=0.2277166973799467
Epoch #122: loss=0.19770321436226368
Epoch #123: loss=0.38468093797564507
Epoch #124: loss=0.35080767050385475
Epoch #125: loss=0.27116195019334555
Epoch #126: loss=0.482275890186429
Epoch #127: loss=0.4110573176294565
Epoch #128: loss=0.48866940289735794
Epoch #129: loss=0.24627827294170856
Epoch #130: loss=0.4315560571849346
Epoch #131: loss=0.46632421016693115
Epoch #132: loss=0.28840822353959084
Epoch #133: loss=0.329901909455657
Epoch #134: loss=0.2526453174650669
Epoch #135: loss=0.38449892587959766
Epoch #136: loss=0.24685615301132202
Epoch #137: loss=0.33212145511060953
Epoch #138: loss=0.3371870629489422
Epoch #139: loss=0.2849635984748602
Epoch #140: loss=0.1939233886078
Epoch #141: loss=0.2605238985270262
Epoch #142: loss=0.20955055858939886
Epoch #143: loss=0.22221460193395615
Epoch #144: loss=0.38899230398237705
Epoch #145: loss=0.23243901506066322
Epoch #146: loss=0.24827738851308823
Epoch #147: loss=0.21124322898685932
Epoch #148: loss=0.20674556400626898
Epoch #149: loss=0.252815430983901
Epoch #150: loss=0.2415603157132864
Epoch #151: loss=0.21232433430850506
Epoch #152: loss=0.26478730607777834
Epoch #153: loss=0.19254094455391169
Epoch #154: loss=0.3298852723091841
Epoch #155: loss=0.20144623331725597
Epoch #156: loss=0.3185807205736637
Epoch #157: loss=0.27125897351652384
Epoch #158: loss=0.26091703213751316
Epoch #159: loss=0.2934754379093647
Epoch #160: loss=0.27142489049583673
Epoch #161: loss=0.24411689955741167
Epoch #162: loss=0.2822933690622449
Epoch #163: loss=0.21523637510836124
Epoch #164: loss=0.13948979787528515
Epoch #165: loss=0.18412794452160597
Epoch #166: loss=0.22003724053502083
Epoch #167: loss=0.25017969962209463
Epoch #168: loss=0.1965209562331438
Epoch #169: loss=0.1923919701948762
Epoch #170: loss=0.2498185019940138
Epoch #171: loss=0.16759375762194395
Epoch #172: loss=0.17437141109257936
Epoch #173: loss=0.3015177696943283
Epoch #174: loss=0.2478084317408502
Epoch #175: loss=0.20013865735381842
Epoch #176: loss=0.2448536641895771
Epoch #177: loss=0.20685665123164654
Epoch #178: loss=0.21587572433054447
Epoch #179: loss=0.306141450535506
Epoch #180: loss=0.3645557854324579
Epoch #181: loss=0.19958173483610153
Epoch #182: loss=0.2719541657716036
Epoch #183: loss=0.17009457014501095
Epoch #184: loss=0.23073072638362646
Epoch #185: loss=0.13543089479207993
Epoch #186: loss=0.1606155512854457
Epoch #187: loss=0.15950947580859065
Epoch #188: loss=0.2519907848909497
Epoch #189: loss=0.1658799685537815
Epoch #190: loss=0.1508139967918396
Epoch #191: loss=0.22232462000101805
Epoch #192: loss=0.24769047787413
Epoch #193: loss=0.3763888459652662
Epoch #194: loss=0.36600527353584766
Epoch #195: loss=0.2645138194784522
Epoch #196: loss=0.1721650091931224
Epoch #197: loss=0.22653755266219378
Epoch #198: loss=0.1960210306569934
Epoch #199: loss=0.1890017786063254
Epoch #200: loss=0.22223514784127474
Epoch #201: loss=0.17893053498119116
Epoch #202: loss=0.17279848642647266
Epoch #203: loss=0.34891441091895103
Epoch #204: loss=0.25416698958724737
Epoch #205: loss=0.2213146723806858
Epoch #206: loss=0.15911840461194515
Epoch #207: loss=0.16699791885912418
Epoch #208: loss=0.20732031669467688
Epoch #209: loss=0.16426454717293382
Epoch #210: loss=0.282951220870018
Epoch #211: loss=0.2229910958558321
Epoch #212: loss=0.18475748924538493
Epoch #213: loss=0.21144808921962976
Epoch #214: loss=0.2190541848540306
Epoch #215: loss=0.21154106967151165
Epoch #216: loss=0.25794857181608677
Epoch #217: loss=0.2558626430109143
Epoch #218: loss=0.16486994782462716
Epoch #219: loss=0.18446382135152817
Epoch #220: loss=0.2095604445785284
Epoch #221: loss=0.12188290571793914
Epoch #222: loss=0.15919592510908842
Epoch #223: loss=0.1271712346933782
Epoch #224: loss=0.12049138499423862
Epoch #225: loss=0.19461277406662703
Epoch #226: loss=0.32024675654247403
Epoch #227: loss=0.18342732824385166
Epoch #228: loss=0.21256073843687773
Epoch #229: loss=0.1587466993369162
Epoch #230: loss=0.24594452511519194
Epoch #231: loss=0.17214763024821877
Epoch #232: loss=0.15396254090592265
Epoch #233: loss=0.19431765330955386
Epoch #234: loss=0.1542125903069973
Epoch #235: loss=0.14807488303631544
Epoch #236: loss=0.13636952126398683
Epoch #237: loss=0.16333296429365873
Epoch #238: loss=0.16372609278187156
Epoch #239: loss=0.20117303542792797
Epoch #240: loss=0.17194108944386244
Epoch #241: loss=0.11122738616541028
Epoch #242: loss=0.15821664780378342
Epoch #243: loss=0.3182173389941454
Epoch #244: loss=0.1962379151955247
Epoch #245: loss=0.23886093590408564
Epoch #246: loss=0.09993273904547095
Epoch #247: loss=0.13889015140011907
Epoch #248: loss=0.14735640399158
Epoch #249: loss=0.15987575007602572

Training time: 0:01:41.331285

Finished.
n2one setting exchange -> ETTh1
Dataset: ETTh1
Arguments: Namespace(batch_size=8, dataset='ETTh1', epochs=None, eval=False, gpu=0, irregular=0, iters=None, loader='forecast_csv', lr=0.001, max_threads=None, max_train_length=3000, model_path='./training/exchange_epochs_250/model.pkl', muti_dataset='exchange', record=1, repr_dims=320, run_name='forecast_multivar', save_every=None, seed=None, target='ETTh1')
Loading data... /home/yupengz/ts2vec/datautils.py:136: FutureWarning: weekofyear and week have been deprecated, please use DatetimeIndex.isocalendar().week instead, which returns a Series.  To exactly reproduce the behavior of week and weekofyear and return an Index, you may call pd.Int64Index(idx.isocalendar().week)
  dt.weekofyear.to_numpy(),
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.35153e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=2.61878e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
Evaluation result: {'MSE': 0.5948114600612713, 'MAE': 0.5395536354400237}
Finished.
------------------------- record done -------------------------
n2one setting exchange -> ETTh2
Dataset: ETTh1
Arguments: Namespace(batch_size=8, dataset='ETTh1', epochs=None, eval=False, gpu=0, irregular=0, iters=None, loader='forecast_csv', lr=0.001, max_threads=None, max_train_length=3000, model_path='./training/exchange_epochs_250/model.pkl', muti_dataset='exchange', record=1, repr_dims=320, run_name='forecast_multivar', save_every=None, seed=None, target='ETTh2')
Loading data... /home/yupengz/ts2vec/datautils.py:136: FutureWarning: weekofyear and week have been deprecated, please use DatetimeIndex.isocalendar().week instead, which returns a Series.  To exactly reproduce the behavior of week and weekofyear and return an Index, you may call pd.Int64Index(idx.isocalendar().week)
  dt.weekofyear.to_numpy(),
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.31543e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=2.6149e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
Evaluation result: {'MSE': 0.2605235832212037, 'MAE': 0.3607597187941588}
Finished.
------------------------- record done -------------------------
n2one setting exchange -> ETTm1
Dataset: ETTh1
Arguments: Namespace(batch_size=8, dataset='ETTh1', epochs=None, eval=False, gpu=0, irregular=0, iters=None, loader='forecast_csv', lr=0.001, max_threads=None, max_train_length=3000, model_path='./training/exchange_epochs_250/model.pkl', muti_dataset='exchange', record=1, repr_dims=320, run_name='forecast_multivar', save_every=None, seed=None, target='ETTm1')
Loading data... /home/yupengz/ts2vec/datautils.py:136: FutureWarning: weekofyear and week have been deprecated, please use DatetimeIndex.isocalendar().week instead, which returns a Series.  To exactly reproduce the behavior of week and weekofyear and return an Index, you may call pd.Int64Index(idx.isocalendar().week)
  dt.weekofyear.to_numpy(),
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.0459e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.94289e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=4.76779e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.94289e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
Evaluation result: {'MSE': 0.45738329703045066, 'MAE': 0.46447269871392116}
Finished.
------------------------- record done -------------------------
n2one setting exchange -> ETTm2
Dataset: ETTh1
Arguments: Namespace(batch_size=8, dataset='ETTh1', epochs=None, eval=False, gpu=0, irregular=0, iters=None, loader='forecast_csv', lr=0.001, max_threads=None, max_train_length=3000, model_path='./training/exchange_epochs_250/model.pkl', muti_dataset='exchange', record=1, repr_dims=320, run_name='forecast_multivar', save_every=None, seed=None, target='ETTm2')
Loading data... /home/yupengz/ts2vec/datautils.py:136: FutureWarning: weekofyear and week have been deprecated, please use DatetimeIndex.isocalendar().week instead, which returns a Series.  To exactly reproduce the behavior of week and weekofyear and return an Index, you may call pd.Int64Index(idx.isocalendar().week)
  dt.weekofyear.to_numpy(),
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=8.39495e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.77799e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=4.56882e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
Evaluation result: {'MSE': 0.17321133894704996, 'MAE': 0.2929176061762171}
Finished.
------------------------- record done -------------------------
n2one setting exchange -> electricity
Dataset: ETTh1
Arguments: Namespace(batch_size=8, dataset='ETTh1', epochs=None, eval=False, gpu=0, irregular=0, iters=None, loader='forecast_csv', lr=0.001, max_threads=None, max_train_length=3000, model_path='./training/exchange_epochs_250/model.pkl', muti_dataset='exchange', record=1, repr_dims=320, run_name='forecast_multivar', save_every=None, seed=None, target='electricity')
Loading data... /home/yupengz/ts2vec/datautils.py:136: FutureWarning: weekofyear and week have been deprecated, please use DatetimeIndex.isocalendar().week instead, which returns a Series.  To exactly reproduce the behavior of week and weekofyear and return an Index, you may call pd.Int64Index(idx.isocalendar().week)
  dt.weekofyear.to_numpy(),
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=7.84315e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.62352e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=4.07106e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=7.84315e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
Evaluation result: {'MSE': 0.4004534393008165, 'MAE': 0.42720241060777364}
Finished.
------------------------- record done -------------------------
n2one setting exchange -> traffic
Dataset: ETTh1
Arguments: Namespace(batch_size=8, dataset='ETTh1', epochs=None, eval=False, gpu=0, irregular=0, iters=None, loader='forecast_csv', lr=0.001, max_threads=None, max_train_length=3000, model_path='./training/exchange_epochs_250/model.pkl', muti_dataset='exchange', record=1, repr_dims=320, run_name='forecast_multivar', save_every=None, seed=None, target='traffic')
Loading data... /home/yupengz/ts2vec/datautils.py:136: FutureWarning: weekofyear and week have been deprecated, please use DatetimeIndex.isocalendar().week instead, which returns a Series.  To exactly reproduce the behavior of week and weekofyear and return an Index, you may call pd.Int64Index(idx.isocalendar().week)
  dt.weekofyear.to_numpy(),
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=8.26284e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.77277e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=4.67967e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=8.26284e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
Evaluation result: {'MSE': 0.8645376138811556, 'MAE': 0.48885756068755315}
Finished.
------------------------- record done -------------------------
n2one setting exchange -> exchange
Dataset: ETTh1
Arguments: Namespace(batch_size=8, dataset='ETTh1', epochs=None, eval=False, gpu=0, irregular=0, iters=None, loader='forecast_csv', lr=0.001, max_threads=None, max_train_length=3000, model_path='./training/exchange_epochs_250/model.pkl', muti_dataset='exchange', record=1, repr_dims=320, run_name='forecast_multivar', save_every=None, seed=None, target='exchange')
Loading data... /home/yupengz/ts2vec/datautils.py:136: FutureWarning: weekofyear and week have been deprecated, please use DatetimeIndex.isocalendar().week instead, which returns a Series.  To exactly reproduce the behavior of week and weekofyear and return an Index, you may call pd.Int64Index(idx.isocalendar().week)
  dt.weekofyear.to_numpy(),
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.03151e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.93726e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
Evaluation result: {'MSE': 0.143335668910332, 'MAE': 0.2659051936897889}
Finished.
------------------------- record done -------------------------
n2one setting exchange -> weather
Dataset: ETTh1
Arguments: Namespace(batch_size=8, dataset='ETTh1', epochs=None, eval=False, gpu=0, irregular=0, iters=None, loader='forecast_csv', lr=0.001, max_threads=None, max_train_length=3000, model_path='./training/exchange_epochs_250/model.pkl', muti_dataset='exchange', record=1, repr_dims=320, run_name='forecast_multivar', save_every=None, seed=None, target='weather')
Loading data... /home/yupengz/ts2vec/datautils.py:136: FutureWarning: weekofyear and week have been deprecated, please use DatetimeIndex.isocalendar().week instead, which returns a Series.  To exactly reproduce the behavior of week and weekofyear and return an Index, you may call pd.Int64Index(idx.isocalendar().week)
  dt.weekofyear.to_numpy(),
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=9.38474e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.84921e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=4.4655e-08): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
/home/yupengz/anaconda3/envs/TimesNet/lib/python3.8/site-packages/sklearn/linear_model/_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=9.38474e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T
Evaluation result: {'MSE': 0.7017489995151673, 'MAE': 0.6400274849242673}
Finished.
------------------------- record done -------------------------
